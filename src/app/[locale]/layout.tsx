import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { NextLayoutProps } from "@/src/types/next";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import dynamic from "next/dynamic";

// To avoid hydration warnings
const ThemeProvider = dynamic(
  () =>
    import("@/src/components/providers/theme-provider").then(
      (mod) => mod.ThemeProvider,
    ),
  { ssr: false },
);

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface Props extends NextLayoutProps {
  params: {
    locale: string;
  };
}

const RootLayout = async ({ children, params: { locale } }: Props) => {
  const messages = await getMessages();

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
};

export default RootLayout;
